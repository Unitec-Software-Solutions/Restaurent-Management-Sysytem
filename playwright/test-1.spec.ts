import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
    const randomCode = Math.floor(100000 + Math.random() * 900000).toString();
    const randomBuyingPrice = (Math.random() * 1000 + 1).toFixed(2);
    const randomSellingPrice = (parseFloat(randomBuyingPrice) + Math.random() * 500 + 1).toFixed(2);
    const randomCategoryId = ['1', '2', '3'][Math.floor(Math.random() * 3)];

        await page.goto('https://restaurent-management-sysytem.test/admin/login');
        await page.getByRole('textbox', { name: 'Email' }).fill('superadmin@rms.com');
        await page.getByRole('textbox', { name: 'Password' }).fill('SuperAdmin123!');
        await page.getByRole('button', { name: 'Login' }).click();
        await page.goto('https://restaurent-management-sysytem.test/admin/inventory/items/create');

        await page.getByLabel('Target Organization *').selectOption('1');

        await page.getByRole('textbox', { name: 'Enter item name' }).click();
        await page.getByRole('textbox', { name: 'Enter item name' }).fill('Production item');
        await page.getByRole('textbox', { name: 'Enter item name' }).press('Tab');
        await page.getByRole('textbox', { name: 'Enter unicode name' }).fill('PR item');
        await page.getByRole('textbox', { name: 'Enter unicode name' }).press('Tab');
        await page.getByRole('textbox', { name: 'Enter item code' }).fill(`PR-${Date.now()}-${randomCategoryId}`);
        await page.locator('select[name="items[0][item_category_id]"]').selectOption('1');
        await page.locator('select[name="items[0][unit_of_measurement]"]').selectOption('piece');
        await page.getByPlaceholder('Minimum stock level').click();
        await page.getByPlaceholder('Minimum stock level').fill('80');
        await page.getByPlaceholder('Minimum stock level').press('Tab');
        await page.locator('input[name="items[0][buying_price]"]').fill(randomBuyingPrice);
        await page.locator('input[name="items[0][buying_price]"]').press('Tab');
        await page.locator('input[name="items[0][selling_price]"]').fill(randomSellingPrice);
        await page.locator('input[name="items[0][selling_price]"]').press('Tab');
        await page.getByPlaceholder('Expiry period in days').fill('30');
        await page.getByPlaceholder('Expiry period in days').press('Tab');
        await page.getByRole('textbox', { name: 'Detailed item description' }).fill('10');
        await page.getByRole('textbox', { name: 'Detailed item description' }).press('Tab');
        await page.getByRole('textbox', { name: 'Any special notes about this' }).fill('10');
        await page.locator('select[name="items[0][item_type]"]').selectOption('buy_sell');
        await page.locator('input[name="items[0][current_stock]"]').click();
        await page.locator('input[name="items[0][current_stock]"]').fill('0');
        await page.getByRole('button', { name: '+ Add Another Item' }).click();
        await page.locator('input[name="items[1][name]"]').click();
        await page.locator('input[name="items[1][name]"]').fill('Ingredient item ');
        await page.locator('input[name="items[1][name]"]').press('Tab');
        await page.locator('input[name="items[1][unicode_name]"]').fill('ING item ');
        await page.locator('input[name="items[1][unicode_name]"]').press('Tab');
        await page.locator('input[name="items[1][item_code]"]').fill(`ING-${Date.now()}-${randomCategoryId}`);
        await page.locator('input[name="items[1][item_code]"]').press('Tab');
        await page.locator('select[name="items[1][item_category_id]"]').selectOption('3');
        await page.getByText('Unit* Select Unit Piece Kg').nth(1).click();
        await page.locator('select[name="items[1][unit_of_measurement]"]').selectOption('kg');
        await page.locator('input[name="items[1][reorder_level]"]').click();
        await page.locator('input[name="items[1][reorder_level]"]').fill('80');
        await page.locator('input[name="items[1][reorder_level]"]').press('Tab');
        await page.locator('input[name="items[1][buying_price]"]').fill(randomBuyingPrice);
        await page.locator('input[name="items[1][buying_price]"]').press('Tab');
        await page.locator('input[name="items[1][selling_price]"]').fill(randomSellingPrice);
        await page.locator('input[name="items[1][selling_price]"]').press('Tab');
        await page.locator('input[name="items[1][shelf_life_in_days]"]').fill('68');
        await page.locator('input[name="items[1][shelf_life_in_days]"]').press('Tab');
        await page.locator('textarea[name="items[1][description]"]').fill('85');
        await page.locator('textarea[name="items[1][description]"]').press('Tab');
        await page.locator('textarea[name="items[1][additional_notes]"]').fill('58');
        await page.locator('textarea[name="items[1][additional_notes]"]').press('Tab');
        await page.locator('select[name="items[1][item_type]"]').selectOption('buy_sell');
        await page.locator('input[name="items[1][current_stock]"]').click();
        await page.locator('input[name="items[1][current_stock]"]').fill('0');
        await page.getByRole('button', { name: '+ Add Another Item' }).click();
        await page.locator('input[name="items[2][name]"]').click();
        await page.locator('input[name="items[2][name]"]').fill('Buy and Sell Item');
        await page.locator('input[name="items[2][name]"]').press('Tab');
        await page.locator('input[name="items[2][unicode_name]"]').fill('BNS Item');
        await page.locator('input[name="items[2][unicode_name]"]').press('Tab');
        await page.locator('input[name="items[2][item_code]"]').fill(`BS-${Date.now()}-${randomCategoryId}`);
        await page.locator('input[name="items[2][item_code]"]').press('Tab');
        await page.locator('select[name="items[2][item_category_id]"]').selectOption('2');
        await page.locator('select[name="items[2][unit_of_measurement]"]').selectOption('piece');
        await page.locator('input[name="items[2][reorder_level]"]').click();
        await page.locator('input[name="items[2][reorder_level]"]').fill('850');
        await page.locator('input[name="items[2][reorder_level]"]').press('Tab');
        await page.locator('input[name="items[2][buying_price]"]').fill(randomBuyingPrice);
        await page.locator('input[name="items[2][buying_price]"]').press('Tab');
        await page.locator('input[name="items[2][selling_price]"]').fill(randomSellingPrice);
        await page.locator('input[name="items[2][selling_price]"]').press('Tab');
        await page.locator('input[name="items[2][shelf_life_in_days]"]').fill('60');
        await page.locator('input[name="items[2][shelf_life_in_days]"]').press('Tab');
        await page.locator('textarea[name="items[2][description]"]').fill('98');
        await page.locator('textarea[name="items[2][description]"]').press('Tab');
        await page.locator('textarea[name="items[2][additional_notes]"]').fill('89');
        await page.locator('textarea[name="items[2][additional_notes]"]').press('Tab');
        await page.locator('select[name="items[2][item_type]"]').selectOption('buy_sell');
        await page.locator('input[name="items[2][current_stock]"]').click();
        await page.locator('input[name="items[2][current_stock]"]').fill('80');
        await page.locator('select[name="items[0][item_category_id]"]').selectOption('1');
        await page.locator('select[name="items[1][item_category_id]"]').selectOption('3');
        await page.getByRole('button', { name: 'ïƒ‡ Save All Items' }).click();

});
